# coding: utf-8

"""
    API Endpoints

    Deliver monetary rewards and incentives to employees, customers, survey participants, and more through the Tremendous API. For organizational tasks, like managing your organization and it's members within Tremendous, please see the Tremendous Organizational API.

    The version of the OpenAPI document: 2
    Contact: developers@tremendous.com
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel

from tremendous_python_sdk.pydantic.order_for_create_payment import OrderForCreatePayment
from tremendous_python_sdk.pydantic.order_for_create_reward import OrderForCreateReward

class OrderForCreate(BaseModel):
    payment: OrderForCreatePayment = Field(alias='payment')

    reward: OrderForCreateReward = Field(alias='reward')

    # Reference for this order, supplied by the customer.  When set, `external_id` makes order idempotent. All requests that use the same `external_id` after the initial order creation, will result in a response that returns the data of the initially created order. The response will have a `201` response code. These responses **fail** to create any further orders.  It also allows for retrieving by `external_id` instead of `id` only. 
    external_id: typing.Optional[typing.Optional[str]] = Field(None, alias='external_id')
    class Config:
        arbitrary_types_allowed = True
